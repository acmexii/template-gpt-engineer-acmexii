아래의 이벤트스토밍 모델을 구현한 코드를 생성해줘:

{{{contexts.json}}}




구현 아키텍처와 사용기술은 아래와 같아:

- clean architecture
- spring-boot3
- JPA (must use package jakarta.persistence.* instead of javax.persistence.*)
- H2 DB
- Lombok
- Kafka with spring-cloud-streams library
- JUnit Test



<function>

  var cache = []
  const includingKeys = ["", "_type", "fieldDescriptors", "className", "displayName", "events", "aggregateRoot", "aggregates", "policies", "commands", "actors", "name"]
  const cycleAvoid = (key, value) => {
                  if (isNaN(key) && !includingKeys.includes(key)) return;

                  //// shorten the type name
                  if(key == "_type" && value && value.indexOf('.') > 1) value = value.split(".").pop()
    
                  if (typeof value === 'object' && value !== null) {
                    // Duplicate reference found, discard key
                    if (cache.includes(value)) return;
                
                    // Store value in our collection
                    cache.push(value);
                  }
                  return value;
                }
this.contexts.json = JSON.stringify(this, cycleAvoid)


</function>